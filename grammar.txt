PROGRAM
DECLLIST,DECLARATION,VARDECL,TYPE,ARRAYDECL,STRUCTDECL,CMPDSTMT,STMTLIST,STMT,SIMPLSTMT,ASSINGSTMT,EXPRESSION,TERM,FACTOR,IOSTMT,READSTMT,WRITESTMT,STRUCTSTMT,IFSTMT,WHILESTMT,CONDITION,IDENTIFIER,LETTER,DIGIT,NR,RELATION
+,-,*,/,=,<,<=,==,>=,(,),[,],{,},;,space,main,char,const,else,if,int,while,write,true,false,cin,cout,string,bool,char,struct,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z
PROGRAM-main { DECLIST ; CMPDSTMT }
DECLIST-DECLATATION
DECLIST-DECLARATION ; DECLIST
VARDECL-TYPE IDENTIFIRE = NR
ARRAYDECL-TYPE IDENTIFIER [ DECLIST ]
STRUCTDECL-struct IDENTIFIER { DECLIST }
CMPSTMT-{ STMTLIST }
STMTLIST-STMT
STMTLIST- STMT ; STMTLIST
STMT-SIMPLSTMT
STMT-STRUCTSTMT
STMT-IOSTMT
SIMPLSTMT-ASSIGNSTMT
SIMPLSTMT-IOSTMT
ASSIGNSTMT-IDENTIFIER = EXPRESION
EXPRESSION-EXPRESSION + TERM
EXPRESSION-EXPRESION - TERM
EXPRESSION-TERM
TERM-TERM / FACTOR
TERM-TERM * TERM
TERM-FACTOR
FACTOR-( EXPRESSION ) IDENTIFIER
FACTOR-NR
IOSTMT-WRITESTMT
IOSTMT-READSTMT
READSTMT-cin IDENTIFIER
WRITESTMT-cout IDENTIFIER
WRITESMT-cout IDENTIFIER
STRUCTSMT-CMPDSTMT
STRUCTSMT-IFSTMT
STRUCTSMT-WHILESTMT
IFSTMT-if ( CONDITION ) CMPDSTMT else { CMPDSTMT }
WHILESTMT-while ( CONDITION ) CMPDSTMT
CONDITION-EXPRESION RELATION EXPRESION
IDENTIFIER-LETTER
IDENTIFIER-LETTER IDENTIFIER
LETTER-a
LETTER-b
LETTER-c
LETTER-d
LETTER-e
LETTER-f
LETTER-g
LETTER-h
LETTER-i
LETTER-j
LETTER-k
LETTER-l
LETTER-m
LETTER-n
LETTER-o
LETTER-p
LETTER-q
LETTER-r
LETTER-s
LETTER-t
LETTER-u
LETTER-v
LETTER-w
LETTER-x
LETTER-y
LETTER-z
DIGIT-0
DIGIT-1
DIGIT-2
DIGIT-3
DIGIT-4
DIGIT-5
DIGIT-6
DIGIT-7
DIGIT-8
DIGIT-89
RELATION-<
RELATION-<=
RELATION-==
RELATION-!=
RELATION->=
RELATION->







